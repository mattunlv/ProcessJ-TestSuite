//try claiming 2 chan ends
protocol P{
	holiday : {int x;}
}
record R{
	int x;
}

proc void foo(chan<int>.read c) [yield=true] {
	int x = 10;
	chan<int> b;
	chan<int> a;
	shared chan<int>.read chanEnds[] = new shared chan<int>.read[100];
	
	P[] p = new P[10];
	R[] r = new R[10];

	claim(a.write, b.read, c)
		x = c.read();	
		
	claim(shared chan<int>.read ccr = chanEnds[34]) {
		x = ccr.read();	
	}

	/*	
	shared chan<int> c;
	shared chan<int>.read cr = c.read;
	
	claim(chan<int> v = (c)) {
	
	}
	*/
}

proc void bar(chan<int>.write c) [yield=true] {
	int x, y;
	while(true) {
		x++;	
		while(true) {
			y++;	
		}
	}
}

proc chan<int>.read getChan() [yield=true] {
	chan<int> c;
	return c.read;
}

proc void main()[yield=true] {
	chan<int> c;
	par {
		foo(c.read);	
		bar(c.write);
	}
}